[
    {
        "id": "bbda578bf909493c",
        "type": "tab",
        "label": "My Device",
        "disabled": false,
        "info": ""
    },
    {
        "id": "49211c9db91e1feb",
        "type": "mqtt in",
        "z": "bbda578bf909493c",
        "name": "MQTT Temperature",
        "topic": "/GDrpD2J3jxvzQEy7vGOn/temperature",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "bf517fb86eb23015",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 190,
        "y": 200,
        "wires": [
            [
                "f53c88624146e287"
            ]
        ]
    },
    {
        "id": "81bb406e23716c66",
        "type": "mqtt in",
        "z": "bbda578bf909493c",
        "name": "MQTT Humid",
        "topic": "/GDrpD2J3jxvzQEy7vGOn/humid",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "bf517fb86eb23015",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 170,
        "y": 300,
        "wires": [
            [
                "57386adcf5e3fc8d"
            ]
        ]
    },
    {
        "id": "57386adcf5e3fc8d",
        "type": "ui_gauge",
        "z": "bbda578bf909493c",
        "name": "Humidity",
        "group": "faf90d0ac061b44b",
        "order": 2,
        "width": 0,
        "height": 0,
        "gtype": "wave",
        "title": "Humidity",
        "label": "",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 520,
        "y": 300,
        "wires": []
    },
    {
        "id": "3a1faa5025378967",
        "type": "mqtt out",
        "z": "bbda578bf909493c",
        "name": "MQTT Working Mode",
        "topic": "/GDrpD2J3jxvzQEy7vGOn/setmode",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "bf517fb86eb23015",
        "x": 1120,
        "y": 520,
        "wires": []
    },
    {
        "id": "6425381fd0815984",
        "type": "switch",
        "z": "bbda578bf909493c",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 670,
        "y": 520,
        "wires": [
            [
                "cbb33795356a3d1a"
            ],
            [
                "65c838139710bfaa"
            ]
        ]
    },
    {
        "id": "cbb33795356a3d1a",
        "type": "change",
        "z": "bbda578bf909493c",
        "name": "Safety Mode",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "SafetyMode",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 460,
        "wires": [
            [
                "3a1faa5025378967"
            ]
        ]
    },
    {
        "id": "65c838139710bfaa",
        "type": "change",
        "z": "bbda578bf909493c",
        "name": "Working Mode",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "WorkingMode",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 860,
        "y": 600,
        "wires": [
            [
                "3a1faa5025378967"
            ]
        ]
    },
    {
        "id": "b25788ee89fd0b74",
        "type": "mqtt in",
        "z": "bbda578bf909493c",
        "name": "MQTT Warning on SafetyMode",
        "topic": "/GDrpD2J3jxvzQEy7vGOn/warning",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "bf517fb86eb23015",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 130,
        "y": 780,
        "wires": [
            [
                "e8b7a795acaf3600"
            ]
        ]
    },
    {
        "id": "e8b7a795acaf3600",
        "type": "switch",
        "z": "bbda578bf909493c",
        "name": "If true",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 390,
        "y": 780,
        "wires": [
            [
                "506779815ff60799"
            ]
        ]
    },
    {
        "id": "506779815ff60799",
        "type": "change",
        "z": "bbda578bf909493c",
        "name": "Set Warning Message",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "üë§ Strangers in your room üë§",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "üìü üÜò Warning üÜò üìü",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 780,
        "wires": [
            [
                "0e22aea84847cd8e"
            ]
        ]
    },
    {
        "id": "5472f9925ab22c1e",
        "type": "telegram sender",
        "z": "bbda578bf909493c",
        "name": "Bot",
        "bot": "224ceabb4800a8b8",
        "haserroroutput": false,
        "outputs": 1,
        "x": 1510,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "c85e92da101670e5",
        "type": "function",
        "z": "bbda578bf909493c",
        "name": "Setting Messages",
        "func": "var msg1 = { \"topic\": msg.topic, \"payload\": { \"chatId\": 955526463, \"type\": 'message', \"content\": msg.topic + '\\n\\n' + msg.payload + '\\n' + '‚è∞ ' + msg.mydate + ' ' + msg.mytime} };\nreturn msg1;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 780,
        "wires": [
            [
                "5472f9925ab22c1e"
            ]
        ]
    },
    {
        "id": "b869cd5709de071c",
        "type": "ui_switch",
        "z": "bbda578bf909493c",
        "name": "",
        "label": "Change Mode",
        "tooltip": "",
        "group": "740e7e2c8e006ef7",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 500,
        "y": 520,
        "wires": [
            [
                "6425381fd0815984"
            ]
        ]
    },
    {
        "id": "2c94cfda1e6c26c6",
        "type": "telegram receiver",
        "z": "bbda578bf909493c",
        "name": "Receive Message",
        "bot": "224ceabb4800a8b8",
        "saveDataDir": "",
        "filterCommands": false,
        "x": 90,
        "y": 520,
        "wires": [
            [
                "d56c246b0e02cb34"
            ],
            []
        ]
    },
    {
        "id": "d56c246b0e02cb34",
        "type": "function",
        "z": "bbda578bf909493c",
        "name": "Check condition",
        "func": "var content = msg.payload.content;\nvar id = msg.payload.chatId;\nvar type = msg.payload.type;\n\nif (type == \"message\")\n{\n    if(content == '/safetymode')\n        msg.payload = false;\n    \n    if(content == '/workingmode')\n        msg.payload = true;\n} else{\n    msg.payload = \"not handle\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 520,
        "wires": [
            [
                "b869cd5709de071c"
            ]
        ]
    },
    {
        "id": "31bbb83bed158f45",
        "type": "function",
        "z": "bbda578bf909493c",
        "name": "check login",
        "func": "var uname = msg.payload.username, pword = msg.payload.password\nvar validLogin = (uname == \"admin\" && pword == \"admin\")\nif (validLogin == true)\n    msg.payload = {\"tab\": \"Home\"}\nelse\n    {\n        msg.payload = {\"tab\": \"Login\"}\n        msg.announce = \"Wrong username or password\"\n    }\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 1640,
        "wires": [
            [
                "4af2529b716e2fe7",
                "7047956b2273c472"
            ]
        ]
    },
    {
        "id": "7047956b2273c472",
        "type": "ui_ui_control",
        "z": "bbda578bf909493c",
        "name": "",
        "events": "change",
        "x": 520,
        "y": 1640,
        "wires": [
            []
        ]
    },
    {
        "id": "4af2529b716e2fe7",
        "type": "ui_text",
        "z": "bbda578bf909493c",
        "group": "e235956bea413b70",
        "order": 13,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "",
        "format": "{{msg.announce}}",
        "layout": "row-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 530,
        "y": 1740,
        "wires": []
    },
    {
        "id": "d67585ea23f39f5d",
        "type": "ui_form",
        "z": "bbda578bf909493c",
        "name": "",
        "label": "",
        "group": "e235956bea413b70",
        "order": 12,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Username",
                "value": "username",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Password",
                "value": "password",
                "type": "password",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "username": "",
            "password": ""
        },
        "payload": "",
        "submit": "Login",
        "cancel": "",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 150,
        "y": 1640,
        "wires": [
            [
                "31bbb83bed158f45"
            ]
        ]
    },
    {
        "id": "fbd887fed770f0b9",
        "type": "ui_button",
        "z": "bbda578bf909493c",
        "name": "",
        "group": "4e5b51060df6912b",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Logout",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "logout",
        "payload": "logout",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 770,
        "y": 1280,
        "wires": [
            [
                "49bb281a116ffeed"
            ]
        ]
    },
    {
        "id": "1e685fcd012851cd",
        "type": "ui_ui_control",
        "z": "bbda578bf909493c",
        "name": "",
        "events": "change",
        "x": 1130,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "0463183f6a173b68",
        "type": "ui_toast",
        "z": "bbda578bf909493c",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1370,
        "y": 1320,
        "wires": []
    },
    {
        "id": "5d80e759de9644fc",
        "type": "change",
        "z": "bbda578bf909493c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Successfully logout",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Logout",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1150,
        "y": 1320,
        "wires": [
            [
                "0463183f6a173b68"
            ]
        ]
    },
    {
        "id": "49bb281a116ffeed",
        "type": "function",
        "z": "bbda578bf909493c",
        "name": "check logout",
        "func": "if (msg.payload == \"logout\")\n{\n    msg.payload = {\"tab\": \"Login\"}\n    msg.announce = \"Successfully logout\"\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 1280,
        "wires": [
            [
                "1e685fcd012851cd",
                "5d80e759de9644fc"
            ]
        ]
    },
    {
        "id": "241c90011ed8b69e",
        "type": "inject",
        "z": "bbda578bf909493c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 930,
        "y": 1100,
        "wires": [
            [
                "5ba4bf395782087d"
            ]
        ]
    },
    {
        "id": "5ba4bf395782087d",
        "type": "ui_digital_clock",
        "z": "bbda578bf909493c",
        "name": "",
        "group": "4e5b51060df6912b",
        "order": 2,
        "width": 0,
        "height": 0,
        "x": 1130,
        "y": 1100,
        "wires": []
    },
    {
        "id": "0e22aea84847cd8e",
        "type": "simpletime",
        "z": "bbda578bf909493c",
        "name": "Time Sync",
        "mydate": true,
        "myymd": false,
        "myyear": false,
        "mymonth": false,
        "mymonthn": false,
        "mydom": false,
        "mydoy": false,
        "myday": false,
        "myhourpm": false,
        "myhour": false,
        "mytime": true,
        "mytimes": false,
        "myminute": false,
        "myminutes": false,
        "mysecond": false,
        "mymillis": false,
        "myepoch": false,
        "myrawdate": false,
        "mypm": false,
        "x": 1090,
        "y": 780,
        "wires": [
            [
                "c85e92da101670e5"
            ]
        ]
    },
    {
        "id": "3614331a442011b9",
        "type": "mqtt in",
        "z": "bbda578bf909493c",
        "name": "Get Current Mode from ESP32",
        "topic": "/GDrpD2J3jxvzQEy7vGOn/currentmode",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "bf517fb86eb23015",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 130,
        "y": 880,
        "wires": [
            [
                "3f8f3c07fb9c237b"
            ]
        ]
    },
    {
        "id": "3f8f3c07fb9c237b",
        "type": "switch",
        "z": "bbda578bf909493c",
        "name": "Check current mode",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 440,
        "y": 880,
        "wires": [
            [
                "4939e4ab251f9693"
            ],
            [
                "07cc1c10283e6b46"
            ]
        ]
    },
    {
        "id": "4939e4ab251f9693",
        "type": "change",
        "z": "bbda578bf909493c",
        "name": "Mode = \"WorkingMode\"",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "‚öôÔ∏è Mode: WorkingMode üìä",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "üìü‚úÖChange mode sucessfully ‚úÖüìü",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 840,
        "wires": [
            [
                "0e22aea84847cd8e",
                "02e58b428f2ec5c6"
            ]
        ]
    },
    {
        "id": "07cc1c10283e6b46",
        "type": "change",
        "z": "bbda578bf909493c",
        "name": "Mode = \"SafetyMode\"",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "‚öôÔ∏è Mode: SafetyMode üîê",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "üìü‚úÖChange mode sucessfully ‚úÖüìü",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 920,
        "wires": [
            [
                "0e22aea84847cd8e",
                "02e58b428f2ec5c6"
            ]
        ]
    },
    {
        "id": "f53c88624146e287",
        "type": "ui_chart",
        "z": "bbda578bf909493c",
        "name": "Temperature",
        "group": "faf90d0ac061b44b",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "Temperature",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 530,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "7c994b56bae591eb",
        "type": "ui_template",
        "z": "bbda578bf909493c",
        "group": "99e87ca6af917f15",
        "name": "",
        "order": 0,
        "width": "6",
        "height": "7",
        "format": "<ul>\n    <li ng-repeat=\"x in msg.payload\"\n        <h1 style=\"color:red\"> {{x.topic}}</h1>\n        <ul style=\"color:black\">\n            <li>Value: {{x.payload}}</li>\n            <li>Time: {{x.time}}</li>\n        </ul>\n    </li>\n</ul>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1100,
        "y": 1520,
        "wires": [
            []
        ]
    },
    {
        "id": "b5306e530d3e0c74",
        "type": "http request",
        "z": "bbda578bf909493c",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://api.thingspeak.com/channels/2239002/feeds.json?api_key=20EMGP6E0ZMPG8N1&results=1&timezone=Asia%2FJakarta",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 650,
        "y": 1520,
        "wires": [
            [
                "9556d8a988d6f127"
            ]
        ]
    },
    {
        "id": "2756e8be33b19267",
        "type": "inject",
        "z": "bbda578bf909493c",
        "name": "",
        "props": [],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "topic": "",
        "x": 450,
        "y": 1520,
        "wires": [
            [
                "b5306e530d3e0c74"
            ]
        ]
    },
    {
        "id": "9556d8a988d6f127",
        "type": "function",
        "z": "bbda578bf909493c",
        "name": "Control log list",
        "func": "var logList = flow.get(\"logList\")\nvar topic1 = \"\", payload1 = \"\"\nvar topic2 = \"\", payload2 = \"\"\nvar topic3 = \"\", payload3 = \"\"\n\nvar time = msg.payload.feeds[0].created_at\ntime = time.replace(\"T\", \" \")\ntime = time.replace(\"+07:00\", \"\")\n\nif (msg.payload.feeds[0].field1 != flow.get(\"prevMode\"))\n{\n    topic1 = \"Mode\"\n    payload1 = msg.payload.feeds[0].field1\n    flow.set(\"prevMode\", payload1)\n}\n\n\nif (msg.payload.feeds[0].field2 != flow.get(\"prevTemperature\")) \n{\n    topic2 = \"Temperature\"\n    payload2 = msg.payload.feeds[0].field2\n    flow.set(\"prevTemperature\", payload2)\n}\n\n\nif (msg.payload.feeds[0].field3 != flow.get(\"prevHumid\")) \n{\n    topic3 = \"Humid\"\n    payload3 = msg.payload.feeds[0].field3\n    flow.set(\"prevHumid\", payload3)\n}\n\nif (topic1 != \"\")\n{\n    msg = {}\n    msg.topic = topic1\n    msg.payload = payload1\n    msg.time = time\n    logList.unshift(msg)\n}\n\nif (topic2 != \"\") \n{\n    msg = {}\n    msg.topic = topic2\n    msg.payload = payload2\n    msg.time = time\n    logList.unshift(msg)\n}\n\nif (topic3 != \"\") \n{\n    msg = {}\n    msg.topic = topic3\n    msg.payload = payload3\n    msg.time = time\n    logList.unshift(msg)\n}\n\nif (logList.length > 10) \n{\n    logList.shift();\n    logList.length = 10;\n}\n\nflow.set(\"logList\", logList)\nmsg = {}\nmsg.payload = logList\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 1520,
        "wires": [
            [
                "7c994b56bae591eb"
            ]
        ]
    },
    {
        "id": "0b6fcf443f2a7390",
        "type": "inject",
        "z": "bbda578bf909493c",
        "name": "set entry id",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "topic": "",
        "x": 250,
        "y": 1400,
        "wires": [
            [
                "f9cec882c3acdc34"
            ]
        ]
    },
    {
        "id": "b9cfa671191e699d",
        "type": "function",
        "z": "bbda578bf909493c",
        "name": "Default value for log list",
        "func": "if (!msg.payload.feeds[0])\n{\n    flow.set(\"prevMode\", -999)\n    flow.set(\"prevTemperature\", -999)\n    flow.set(\"prevHumid\", -999)\n}\nelse \n{\n    flow.set(\"prevMode\", msg.payload.feeds[0].field1)\n    flow.set(\"prevTemperature\", msg.payload.feeds[0].field2)\n    flow.set(\"prevHumid\", msg.payload.feeds[0].field3)\n}\n\nflow.set(\"logList\", [])\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 1400,
        "wires": [
            []
        ]
    },
    {
        "id": "02e58b428f2ec5c6",
        "type": "ui_text",
        "z": "bbda578bf909493c",
        "group": "740e7e2c8e006ef7",
        "order": 1,
        "width": "7",
        "height": "1",
        "name": "",
        "label": "Current Mode",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1100,
        "y": 880,
        "wires": []
    },
    {
        "id": "f9cec882c3acdc34",
        "type": "http request",
        "z": "bbda578bf909493c",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://api.thingspeak.com/channels/2239002/feeds.json?api_key=20EMGP6E0ZMPG8N1&results=1",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 490,
        "y": 1400,
        "wires": [
            [
                "b9cfa671191e699d"
            ]
        ]
    },
    {
        "id": "bf517fb86eb23015",
        "type": "mqtt-broker",
        "name": "Mqtt Server",
        "broker": "broker.emqx.io",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "faf90d0ac061b44b",
        "type": "ui_group",
        "name": "Humidity & Temperature",
        "tab": "a6d5f498bb9091ed",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "224ceabb4800a8b8",
        "type": "telegram bot",
        "botname": "Wokwi Notification",
        "usernames": "",
        "chatids": "",
        "baseapiurl": "",
        "updatemode": "polling",
        "pollinterval": "300",
        "usesocks": false,
        "sockshost": "",
        "socksprotocol": "socks5",
        "socksport": "6667",
        "socksusername": "anonymous",
        "sockspassword": "",
        "bothost": "",
        "botpath": "",
        "localbotport": "8443",
        "publicbotport": "8443",
        "privatekey": "",
        "certificate": "",
        "useselfsignedcertificate": false,
        "sslterminated": false,
        "verboselogging": false
    },
    {
        "id": "740e7e2c8e006ef7",
        "type": "ui_group",
        "name": "Mode",
        "tab": "a6d5f498bb9091ed",
        "order": 3,
        "disp": true,
        "width": "7",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e235956bea413b70",
        "type": "ui_group",
        "name": "Login",
        "tab": "6cd10f2f87376a02",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "4e5b51060df6912b",
        "type": "ui_group",
        "name": "Information",
        "tab": "a6d5f498bb9091ed",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "99e87ca6af917f15",
        "type": "ui_group",
        "name": "Logs",
        "tab": "a6d5f498bb9091ed",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a6d5f498bb9091ed",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "6cd10f2f87376a02",
        "type": "ui_tab",
        "name": "Login",
        "icon": "login",
        "order": 1,
        "disabled": false,
        "hidden": false
    }
]